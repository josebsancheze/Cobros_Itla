/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.itla.cobros;

import com.toedter.calendar.demo.DemoTable;
import java.io.File;
import java.io.FileNotFoundException;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author edgar
 */
public class MainFrame extends javax.swing.JFrame {

    DataBase dataBase = new DataBase();
    String userInsertado = "";
    private String path = "";
    private String name = "";
    private static int indexCuenta = 1;
    private static int totalCuenta = 0;
    private boolean actualizar = false;
    private boolean revisado = false;
    SimpleDateFormat formatter = new SimpleDateFormat("yyyy/MM/dd");
    private ResultSet rsCuentas;
    private List lista = new LinkedList();
    //String dateInString = "7-Jun-2013";

    /**
     * Creates new form MainFrame
     */
    public MainFrame(DataBase dataBase, String userInsertado) {
        this.dataBase = dataBase;
        initComponents();
        setAllFieldsTrueOrFalse(false);
        setResizable(false);
        setTitle("Cobros ITLA");
        lblUserLogged.setText(userInsertado);
        this.userInsertado = userInsertado;
        //btnSiguiente.setEnabled(false);
        verificarCuentasNoRevisadas();




    }

    private void verificarCuentasNoRevisadas() {
        String sql = "SELECT cedula, nombre, apellido, tel1, tel2, dir1, dir2, \n"
                + " id_zona, fecha_ingreso, no_contrato, fecha_contrato, estatus, \n"
                + " id_empresa, monto_deuda\n"
                + " FROM cobros.cuenta, cobros.track_cuenta\n"
                + " WHERE cobros.cuenta.id_cuenta = cobros.track_cuenta.id_cuenta\n"
                + " AND cobros.track_cuenta.revisado = 'N'";
     
        int cuentasNoRevisadas = 0;
        try {
            ResultSet rs = dataBase.getResultSet(sql);
            rsCuentas = dataBase.getResultSet(sql);

            while (rs.next()) {
                ++cuentasNoRevisadas;
            }

            if (cuentasNoRevisadas >= 0) {
                System.out.println("Existen " + cuentasNoRevisadas + " cuentas sin revisar");
                JOptionPane.showMessageDialog(this, "Hola, usted contiene "+ cuentasNoRevisadas + "cuentas sin revisar");
                
                    while (rsCuentas.next()) {

                        String cedula = rsCuentas.getString("cedula");
                        String nombre = rsCuentas.getString("nombre");
                        String apellido = rsCuentas.getString("apellido");
                        String tel1 = rsCuentas.getString("tel1");
                        String tel2 = rsCuentas.getString("tel2");
                        String dir1 = rsCuentas.getString("dir1");
                        String dir2 = rsCuentas.getString("dir2");
                        String id_zona = rsCuentas.getString("id_zona");
                        Date fecha_ingreso = rsCuentas.getDate("fecha_ingreso");
                        String no_contrato = rsCuentas.getString("no_contrato");
                        Date fecha_contrato = rsCuentas.getDate("fecha_contrato");
                        String estatus = rsCuentas.getString("estatus");
                        int id_empresa = rsCuentas.getInt("id_empresa");
                        BigDecimal monto_deuda = rsCuentas.getBigDecimal("monto_deuda");
                        System.out.println("la cedula: "+cedula);

                        Cuenta cuenta = new Cuenta(cedula, nombre, apellido, tel1, tel2, dir1, dir2, id_zona, fecha_ingreso, no_contrato, fecha_contrato, estatus, id_empresa, monto_deuda);

                        lista.add(cuenta);
                    }


                }else {
                JOptionPane.showMessageDialog(this, "No hay cuentas por revisar");

            }
        } catch (Exception e) {
            System.out.println("ERROR: " + e.getMessage());
        }





        System.out.println("Termina...");


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        jSeparator1 = new javax.swing.JSeparator();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        lbCuenta = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lbCedula = new javax.swing.JLabel();
        fieldCuenta = new javax.swing.JTextField();
        fieldCedula = new javax.swing.JTextField();
        fieldNombres = new javax.swing.JTextField();
        fieldApellidos = new javax.swing.JTextField();
        fieldContrato = new javax.swing.JTextField();
        fieldTel1 = new javax.swing.JTextField();
        fieldTel2 = new javax.swing.JTextField();
        fieldZona = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        fieldMonto = new javax.swing.JTextField();
        fieldEmpresa = new javax.swing.JTextField();
        fieldDisposicion = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaObservacion = new javax.swing.JTextArea();
        fieldRecordatorio = new javax.swing.JTextField();
        fieldFechaContrato = new javax.swing.JTextField();
        fieldDescripcionRecordatorio = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        fieldDir1 = new javax.swing.JTextField();
        fieldDir2 = new javax.swing.JTextField();
        comboBoxDisposicion = new javax.swing.JComboBox();
        comboBoxZona = new javax.swing.JComboBox();
        lblUserLogged = new javax.swing.JLabel();
        btnEditar = new javax.swing.JToggleButton();
        btnActualizar = new javax.swing.JButton();
        btnSiguiente = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        btnMenuArchivo = new javax.swing.JMenu();
        btnMenuImportarCuenta = new javax.swing.JMenuItem();
        btnMenuSalir = new javax.swing.JMenuItem();
        btnMenuVer = new javax.swing.JMenu();
        btnMenuMisAsignacionesPendientes = new javax.swing.JMenuItem();
        btnMenuMisAsignacionesYaRealizadas = new javax.swing.JMenuItem();
        btnMenuMisEmpresas = new javax.swing.JMenuItem();
        btnMenuMisRecordatorios = new javax.swing.JMenuItem();
        btnMenuMiPerfilDeUsuario = new javax.swing.JMenuItem();
        btnMenuTrackCuentaActual = new javax.swing.JMenuItem();
        btnMenuMisZonas = new javax.swing.JMenuItem();

        jMenu3.setText("jMenu3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Main Window");

        jInternalFrame1.setTitle("Cuenta");
        jInternalFrame1.setToolTipText("");
        jInternalFrame1.setVisible(true);

        lbCuenta.setFont(new java.awt.Font("Lucida Bright", 1, 13)); // NOI18N
        lbCuenta.setText("Cuenta No.");

        jLabel2.setFont(new java.awt.Font("Lucida Bright", 1, 13)); // NOI18N
        jLabel2.setText("Cédula:");

        jLabel3.setFont(new java.awt.Font("Lucida Bright", 1, 13)); // NOI18N
        jLabel3.setText("Nombres:");

        jLabel4.setFont(new java.awt.Font("Lucida Bright", 1, 13)); // NOI18N
        jLabel4.setText("Apellidos:");

        jLabel5.setFont(new java.awt.Font("Lucida Bright", 1, 13)); // NOI18N
        jLabel5.setText("Contrato No.");

        jLabel6.setFont(new java.awt.Font("Lucida Bright", 1, 13)); // NOI18N
        jLabel6.setText("Tel. 1:");

        jLabel7.setFont(new java.awt.Font("Lucida Bright", 1, 13)); // NOI18N
        jLabel7.setText("Tel 2:");

        jLabel8.setFont(new java.awt.Font("Lucida Bright", 1, 13)); // NOI18N
        jLabel8.setText("Zona:");

        fieldCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldCedulaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Bright", 1, 13)); // NOI18N
        jLabel1.setText("Monto:");

        jLabel9.setFont(new java.awt.Font("Lucida Bright", 1, 13)); // NOI18N
        jLabel9.setText("Empresa:");

        jLabel10.setFont(new java.awt.Font("Lucida Bright", 1, 13)); // NOI18N
        jLabel10.setText("Fecha Contrato:");

        jLabel11.setFont(new java.awt.Font("Lucida Bright", 1, 13)); // NOI18N
        jLabel11.setText("Observación:");

        jLabel12.setFont(new java.awt.Font("Lucida Bright", 1, 13)); // NOI18N
        jLabel12.setText("Disposición:");

        jLabel13.setFont(new java.awt.Font("Lucida Bright", 1, 13)); // NOI18N
        jLabel13.setText("Recordatorio:");

        jLabel14.setFont(new java.awt.Font("Lucida Bright", 1, 13)); // NOI18N
        jLabel14.setText("Descripción");

        textAreaObservacion.setColumns(20);
        textAreaObservacion.setRows(5);
        textAreaObservacion.setName(""); // NOI18N
        jScrollPane1.setViewportView(textAreaObservacion);

        fieldFechaContrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldFechaContratoActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Lucida Bright", 1, 13)); // NOI18N
        jLabel16.setText("Dirección L1:");

        jLabel17.setFont(new java.awt.Font("Lucida Bright", 1, 13)); // NOI18N
        jLabel17.setText("Dirección L2:");

        comboBoxDisposicion.setSelectedItem(comboBoxDisposicion.getComponents());
        comboBoxDisposicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxDisposicionActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jInternalFrame1Layout = new org.jdesktop.layout.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jInternalFrame1Layout.createSequentialGroup()
                        .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel5)
                            .add(jLabel6)
                            .add(jLabel7)
                            .add(jLabel8))
                        .add(7, 7, 7)
                        .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(fieldTel1)
                            .add(fieldTel2)
                            .add(fieldZona)
                            .add(fieldContrato, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 114, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jInternalFrame1Layout.createSequentialGroup()
                        .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lbCuenta)
                            .add(jLabel2)
                            .add(jLabel3)
                            .add(jLabel4))
                        .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jInternalFrame1Layout.createSequentialGroup()
                                .add(18, 18, 18)
                                .add(fieldCedula, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 114, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                                .add(18, 18, 18)
                                .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, fieldNombres, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 114, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, fieldApellidos, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 114, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, fieldCuenta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 114, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                    .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(jInternalFrame1Layout.createSequentialGroup()
                            .add(jLabel16)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(fieldDir1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 203, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(jInternalFrame1Layout.createSequentialGroup()
                            .add(jLabel17)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(comboBoxZona, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(fieldDir2)))))
                .add(18, 18, 18)
                .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(jLabel9)
                    .add(jLabel10)
                    .add(jLabel11)
                    .add(jLabel12)
                    .add(jLabel13)
                    .add(jLabel14))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jInternalFrame1Layout.createSequentialGroup()
                        .add(182, 182, 182)
                        .add(lbCedula, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, comboBoxDisposicion, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(fieldDescripcionRecordatorio)
                        .add(fieldRecordatorio)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, fieldDisposicion)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, fieldEmpresa)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, fieldMonto)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, fieldFechaContrato)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jInternalFrame1Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(lbCedula))
                    .add(jInternalFrame1Layout.createSequentialGroup()
                        .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jInternalFrame1Layout.createSequentialGroup()
                                .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(lbCuenta)
                                    .add(fieldCuenta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel1))
                                .add(6, 6, 6)
                                .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel2)
                                    .add(fieldCedula, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel9))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel3)
                                    .add(fieldNombres, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel4)
                                    .add(fieldApellidos, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel5)
                                    .add(fieldContrato, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel6)
                                    .add(fieldTel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel7)
                                    .add(fieldTel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel8)
                                    .add(fieldZona, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel16)
                                    .add(fieldDir1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel17)
                                    .add(fieldDir2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(fieldDescripcionRecordatorio, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(jInternalFrame1Layout.createSequentialGroup()
                                .add(fieldMonto, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(6, 6, 6)
                                .add(fieldEmpresa, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel10)
                                    .add(fieldFechaContrato, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel11)
                                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 102, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(0, 0, Short.MAX_VALUE)
                                .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel12)
                                    .add(fieldDisposicion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel13)
                                    .add(fieldRecordatorio, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(26, 26, 26)))
                        .add(jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(comboBoxDisposicion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(comboBoxZona, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(0, 25, Short.MAX_VALUE))))
        );

        lblUserLogged.setForeground(new java.awt.Color(0, 204, 51));
        lblUserLogged.setText("usuario");

        btnEditar.setText("Editar on");
        btnEditar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btnEditarItemStateChanged(evt);
            }
        });
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnSiguiente.setText("Siguiente");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        btnMenuArchivo.setText("Archivo");

        btnMenuImportarCuenta.setText("Importar cuenta");
        btnMenuImportarCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuImportarCuentaActionPerformed(evt);
            }
        });
        btnMenuArchivo.add(btnMenuImportarCuenta);

        btnMenuSalir.setText("Salir");
        btnMenuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuSalirActionPerformed(evt);
            }
        });
        btnMenuArchivo.add(btnMenuSalir);

        jMenuBar1.add(btnMenuArchivo);

        btnMenuVer.setText("Ver");

        btnMenuMisAsignacionesPendientes.setText("Mis Asignaciones Pendientes");
        btnMenuMisAsignacionesPendientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuMisAsignacionesPendientesActionPerformed(evt);
            }
        });
        btnMenuVer.add(btnMenuMisAsignacionesPendientes);

        btnMenuMisAsignacionesYaRealizadas.setText("Mis Asignaciones Ya Realizadas");
        btnMenuMisAsignacionesYaRealizadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuMisAsignacionesYaRealizadasActionPerformed(evt);
            }
        });
        btnMenuVer.add(btnMenuMisAsignacionesYaRealizadas);

        btnMenuMisEmpresas.setText("Mis Empresas");
        btnMenuMisEmpresas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuMisEmpresasActionPerformed(evt);
            }
        });
        btnMenuVer.add(btnMenuMisEmpresas);

        btnMenuMisRecordatorios.setText("Mis Recordatorios");
        btnMenuMisRecordatorios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuMisRecordatoriosActionPerformed(evt);
            }
        });
        btnMenuVer.add(btnMenuMisRecordatorios);

        btnMenuMiPerfilDeUsuario.setText("Mi Perfil De Usuario");
        btnMenuMiPerfilDeUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuMiPerfilDeUsuarioActionPerformed(evt);
            }
        });
        btnMenuVer.add(btnMenuMiPerfilDeUsuario);

        btnMenuTrackCuentaActual.setText("Track Cuenta Actual");
        btnMenuTrackCuentaActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuTrackCuentaActualActionPerformed(evt);
            }
        });
        btnMenuVer.add(btnMenuTrackCuentaActual);

        btnMenuMisZonas.setText("Mis Zonas");
        btnMenuMisZonas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuMisZonasActionPerformed(evt);
            }
        });
        btnMenuVer.add(btnMenuMisZonas);

        jMenuBar1.add(btnMenuVer);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jSeparator1)
                    .add(jInternalFrame1)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, lblUserLogged, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, btnEditar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, btnActualizar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                            .add(btnSiguiente, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(lblUserLogged)
                .add(99, 99, 99)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jInternalFrame1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(btnEditar)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnActualizar)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnSiguiente)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMenuImportarCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuImportarCuentaActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = CuadroSelectorArchivos.initFileChooser();

        if (fc != null) {
            String path = fc.getCurrentDirectory().toString();
            String name = fc.getSelectedFile().getName();
            this.path = path;
            this.name = name;
            List cuenta = new ArrayList();
            cuenta = CargarProperties.getCaso(path, name);

            for (Object obj : cuenta) {
                System.out.print(obj);
                System.out.println(",");
            }

            actualizarFields(cuenta);
            //btnSiguiente.setEnabled(true);

            File dir = new File(path);
            totalCuenta = dir.listFiles().length;

            //para indexar los nombres de los archivos del folder y luego saber
            //que archivo tengo seleccionado por un indice
            Map<Integer, String> nombresArchivo = new HashMap<Integer, String>();
            File[] child;

            child = dir.listFiles();
            try {
                for (int i = 0; i < totalCuenta; i++) {
                    if (!child[i].getName().isEmpty()) {
                        //Entro al Map todos los archivos del folder
                        nombresArchivo.put(i, child[i].getName());
                    }
                    //System.out.println("nombres archivos " + nombresArchivo.get(i));
                    if (nombresArchivo.get(i).equals(fc.getSelectedFile().getName())) {
                        //System.out.println(nombresArchivo.get(i));
                        indexCuenta = i + 1;
                        //System.out.println("LE ASIGNE "+ indexCuenta);
                    }
                }
                btnSiguiente.setEnabled(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
            System.out.println("INDICE " + indexCuenta);
            System.out.println("TOTAL " + totalCuenta);

            if (indexCuenta == totalCuenta) {
                this.btnSiguiente.setEnabled(false);
            }

        }
    }//GEN-LAST:event_btnMenuImportarCuentaActionPerformed

    public void actualizarFields(List cuentaActual) {

        fieldCuenta.setText(cuentaActual.get(0).toString());
        fieldCedula.setText(cuentaActual.get(1).toString());
        fieldNombres.setText(cuentaActual.get(2).toString());
        fieldApellidos.setText(cuentaActual.get(3).toString());
        fieldContrato.setText(cuentaActual.get(4).toString());
        fieldTel1.setText(cuentaActual.get(5).toString());
        fieldTel2.setText(cuentaActual.get(6).toString());
        fieldZona.setText(cuentaActual.get(7).toString());
        fieldDir1.setText(cuentaActual.get(8).toString());
        fieldDir2.setText(cuentaActual.get(9).toString());
        fieldMonto.setText(cuentaActual.get(10).toString());
        fieldEmpresa.setText(cuentaActual.get(11).toString());
        fieldFechaContrato.setText(cuentaActual.get(12).toString());
        comboBoxZona.addItem(cuentaActual.get(7).toString());
        comboBoxDisposicion.addItem(cuentaActual.get(14).toString());

        //cargar elementos comboBoxZona
        try {
            Set<String> zonas = new HashSet<String>();
            String sql = "select * from cobros.zona";
            ResultSet rs = dataBase.getResultSet(sql);
            while (rs.next()) {
                if (!zonas.contains(rs.getString("descripcion"))) {
                    zonas.add(rs.getString("descripcion"));
                }
            }
            for (String zona : zonas) {
                if (!zona.equalsIgnoreCase(cuentaActual.get(7).toString())) {
                    comboBoxZona.addItem(zona);
                }
            }
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,
                    "ERROR 408: No se pudo cargar la zona de la cuenta",
                    "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        //cargar elementos comboBoxDisposicion
        try {
            List<String> disposiciones = new ArrayList<String>();
            String sql = "select * from cobros.disposicion";
            ResultSet rs = dataBase.getResultSet(sql);
            while (rs.next()) {
                if (!disposiciones.contains(rs.getString("descripcion"))) {
                    disposiciones.add(rs.getString("descripcion"));
                }
            }
            for (String disp : disposiciones) {
                if (!disp.equalsIgnoreCase(cuentaActual.get(14).toString())) {
                    comboBoxDisposicion.addItem(disp);
                }
            }
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,
                    "ERROR 408: No se pudo cargar la disposicion de la cuenta",
                    "ERROR", JOptionPane.ERROR_MESSAGE);
        }

        try {
            //dateChooserFechaContrato.setDate((Date) cuentaActual.get(12));
            Date date = formatter.parse(cuentaActual.get(12).toString());
            System.out.println(date);
            System.out.println(formatter.format(date));

        } catch (ParseException e) {
            e.printStackTrace();
        }
        textAreaObservacion.setText(cuentaActual.get(13).toString());
        fieldDisposicion.setText(cuentaActual.get(14).toString());
        fieldRecordatorio.setText(cuentaActual.get(15).toString());
        fieldDescripcionRecordatorio.setText(cuentaActual.get(16).toString());

    }

    private void btnMenuMisAsignacionesYaRealizadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuMisAsignacionesYaRealizadasActionPerformed
        // TODO add your handling code here:
        IniciarReporte iniciarReporte = new IniciarReporte(dataBase);
        try {
            iniciarReporte.ejecutarReporte("MisAsignacionesYaRealizadas", userInsertado);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "ERROR 408: No se pudo cargar el reporte", "ERROR", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnMenuMisAsignacionesYaRealizadasActionPerformed

    private void btnMenuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnMenuSalirActionPerformed

    private void btnMenuMiPerfilDeUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuMiPerfilDeUsuarioActionPerformed
        // TODO add your handling code here:
        IniciarReporte iniciarReporte = new IniciarReporte(dataBase);
        try {
            iniciarReporte.ejecutarReporte("Agente2", userInsertado);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "ERROR 408: No se pudo cargar el reporte", "ERROR", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnMenuMiPerfilDeUsuarioActionPerformed

    private void btnMenuMisZonasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuMisZonasActionPerformed
        // TODO add your handling code here:
        IniciarReporte iniciarReporte = new IniciarReporte(dataBase);
        try {
            iniciarReporte.ejecutarReporte("MisZonas", userInsertado);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "ERROR 408: No se pudo cargar el reporte", "ERROR", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Reporte reporte = new Reporte();
        //reporte.runReporte("MisZonas");
    }//GEN-LAST:event_btnMenuMisZonasActionPerformed

    private void btnMenuTrackCuentaActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuTrackCuentaActualActionPerformed
        // TODO add your handling code here:
        IniciarReporte iniciarReporte = new IniciarReporte(dataBase);
        try {
            iniciarReporte.ejecutarReporte("TrackCuenta", userInsertado);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "ERROR 408: No se pudo cargar el reporte", "ERROR", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnMenuTrackCuentaActualActionPerformed

    private void btnMenuMisRecordatoriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuMisRecordatoriosActionPerformed
        // TODO add your handling code here:
        IniciarReporte iniciarReporte = new IniciarReporte(dataBase);
        try {
            iniciarReporte.ejecutarReporte("MisRecordatorios", userInsertado);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "ERROR 408: No se pudo cargar el reporte", "ERROR", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnMenuMisRecordatoriosActionPerformed

    private void btnMenuMisEmpresasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuMisEmpresasActionPerformed
        // TODO add your handling code here:
        IniciarReporte iniciarReporte = new IniciarReporte(dataBase);
        try {
            iniciarReporte.ejecutarReporte("MisEmpresas", userInsertado);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "ERROR 408: No se pudo cargar el reporte", "ERROR", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnMenuMisEmpresasActionPerformed

    private void btnMenuMisAsignacionesPendientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuMisAsignacionesPendientesActionPerformed
        // TODO add your handling code here:
        IniciarReporte iniciarReporte = new IniciarReporte(dataBase);
        try {
            iniciarReporte.ejecutarReporte("MisAsignacionesPendientes", userInsertado);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "ERROR 408: No se pudo cargar el reporte", "ERROR", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnMenuMisAsignacionesPendientesActionPerformed

    private void fieldCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldCedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCedulaActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarActionPerformed
    private void setAllFieldsTrueOrFalse(boolean b) {
        fieldNombres.setEditable(false);
        fieldApellidos.setEditable(false);
        fieldCedula.setEditable(false);
        fieldContrato.setEditable(false);
        fieldCuenta.setEditable(false);
        fieldDescripcionRecordatorio.setEditable(b);
        fieldDisposicion.setEditable(b);//debe ser dropdown
        fieldEmpresa.setEditable(false);
        fieldFechaContrato.setEditable(false);
        fieldMonto.setEditable(false);
        fieldRecordatorio.setEditable(b);
        fieldTel1.setEditable(b);
        fieldTel2.setEditable(b);
        fieldZona.setEditable(b);//debe ser dropdown
        fieldDir1.setEditable(b);
        fieldDir2.setEditable(b);
        textAreaObservacion.setEditable(b);
        comboBoxDisposicion.setEnabled(b);
        comboBoxZona.setEnabled(b);
        // dateChooserFechaContrato.setEnabled(b);
    }

    private void btnEditarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btnEditarItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            btnEditar.setText("Editar off");
            setAllFieldsTrueOrFalse(true);
        } else {
            btnEditar.setText("Editar on");
            setAllFieldsTrueOrFalse(false);
        }
    }//GEN-LAST:event_btnEditarItemStateChanged

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        // TODO add your handling code here:
        
        
        
        
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void fieldFechaContratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldFechaContratoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldFechaContratoActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        //id_agente
        ResultSet datosIdAgente = dataBase.getResultSet("select * from cobros.agente where cobros.agente.usuario = '" + userInsertado + "'");
        int idAgente = 0;
        try {
            if (datosIdAgente.last()) {
                idAgente = datosIdAgente.getInt("id_agente");
                System.out.println("ID AGENTE " + idAgente);
            }
        } catch (SQLException ex) {
            Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        //id_disposicion
        ResultSet datosIdDisposicion = dataBase.getResultSet("select * from cobros.disposicion where cobros.disposicion.descripcion = '" + fieldDisposicion.getText() + "'");
        int idDisposicion = 0;
        try {
            if (datosIdDisposicion.last()) {
                idDisposicion = datosIdDisposicion.getInt("id_disposicion");
                System.out.println("ID DISPOSICION " + idDisposicion);
            }
        } catch (SQLException ex) {
            Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        //id_reminder
        ResultSet datosIdReminder = dataBase.getResultSet("select * from cobros.reminder where cobros.reminder.descripcion = '" + fieldDescripcionRecordatorio.getText() + "'");
        int idReminder = 0;
        try {
            if (datosIdReminder.last()) {
                idReminder = datosIdReminder.getInt("id_reminder");
                System.out.println("ID REMINDER " + idReminder);
            }
        } catch (SQLException ex) {
            Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        //commit
        //DUDA: SE PUEDEN EDITAR TODOS LOS CAMPOS??? NO
        //hacer dropdown disposicion, zona
        //hacer calendar recordatorio y hacer insert aqui y luego update a su descripcion segun el id que debe ser generado automaticamente
        dataBase.executeUpdate("update cobros.cuenta set tel1 = '"
                + fieldTel1.getText()
                + "', tel2 = '"
                + fieldTel2.getText()
                + "', fecha_contrato = '"
                + fieldFechaContrato.getText()
                + "', dir1 = '"
                + fieldDir1.getText()
                + "', dir2 = '"
                + fieldDir2.getText()
                + "' where id_cuenta = "
                + Integer.parseInt(fieldCuenta.getText())
                + " ");

        System.out.println("DATOS INSERTADOS!!!");

        //crear archivo "cuentaXXXR"
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void comboBoxDisposicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxDisposicionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxDisposicionActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JToggleButton btnEditar;
    private javax.swing.JMenu btnMenuArchivo;
    private javax.swing.JMenuItem btnMenuImportarCuenta;
    private javax.swing.JMenuItem btnMenuMiPerfilDeUsuario;
    private javax.swing.JMenuItem btnMenuMisAsignacionesPendientes;
    private javax.swing.JMenuItem btnMenuMisAsignacionesYaRealizadas;
    private javax.swing.JMenuItem btnMenuMisEmpresas;
    private javax.swing.JMenuItem btnMenuMisRecordatorios;
    private javax.swing.JMenuItem btnMenuMisZonas;
    private javax.swing.JMenuItem btnMenuSalir;
    private javax.swing.JMenuItem btnMenuTrackCuentaActual;
    private javax.swing.JMenu btnMenuVer;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JComboBox comboBoxDisposicion;
    private javax.swing.JComboBox comboBoxZona;
    private javax.swing.JTextField fieldApellidos;
    private javax.swing.JTextField fieldCedula;
    private javax.swing.JTextField fieldContrato;
    private javax.swing.JTextField fieldCuenta;
    private javax.swing.JTextField fieldDescripcionRecordatorio;
    private javax.swing.JTextField fieldDir1;
    private javax.swing.JTextField fieldDir2;
    private javax.swing.JTextField fieldDisposicion;
    private javax.swing.JTextField fieldEmpresa;
    private javax.swing.JTextField fieldFechaContrato;
    private javax.swing.JTextField fieldMonto;
    private javax.swing.JTextField fieldNombres;
    private javax.swing.JTextField fieldRecordatorio;
    private javax.swing.JTextField fieldTel1;
    private javax.swing.JTextField fieldTel2;
    private javax.swing.JTextField fieldZona;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbCedula;
    private javax.swing.JLabel lbCuenta;
    private javax.swing.JLabel lblUserLogged;
    private javax.swing.JTextArea textAreaObservacion;
    // End of variables declaration//GEN-END:variables
}
